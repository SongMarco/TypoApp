<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="nova.typoapp">

    <!--
앱이 무엇인가에 대한 주석

1. 앱 설명

타이포그래피(이하 본 앱)은 영단어를 SNS 처럼 공유하는 앱이다.
앱의 기본 컨셉은 페이스북처럼 뉴스피드 형태로 단어를 이미지와 함께 게시하는 것이다.
(추가 기능 : 뉴스피드에 등록된 단어를 이용한 게임, 스터디 소모임)

앱에서는 이미지 중에서도 타이포그래피 형태의 이미지를 공유한다.
타이포그래피는 단어의 철자 모양을 이용해 단어의 의미를 표현하는 방법이다.
웹 이미지 참고 : https://goo.gl/PWL4q3

((현재는 기술의 한계로, 타이포그래피가 아닌 형태의 이미지도 공유가 가능하다.))

좋아요와 댓글을 도입하여, 게시물에 커뮤니케이션 기능을 추가하였다.
좋아요 랭킹 시스템을 도입하여 좋아요를 많이 받은 게시물이 뉴스피드에 자주 노출되도록할 예정이다.

좋아요와 좋아요 랭킹, 게임을 통해 사용자가 적극적으로 단어를 참신하게 표현하고 학습할 수 있도록 한다.
사용자의 자발적인 표현을 유도할 수 있는 기능을 계속해서 생각해야 한다.

의문 - 굳이 타이포그래피여야 하느냐? 단어를 쉽게 유추할 수 있도록 하는 단어라면
자연스럽게 높은 수의 좋아요를 받아 자주 게시될 수 있을 것이다.
어떤 이미지를 공유하도록 할 것인가에 대해서는 생각이 좀 더 필요하다.
    -->

    <uses-feature android:name="android.hardware.camera2" />

    <!--
    권한 사용에 대한 주석
    1. 서버와 통신을 해야되므로 인터넷에 대한 권한이 필요하다.
    2. 디바이스에 저장된 이미지를 가져오므로 저장소 읽기 권한 필요-
    3. 디바이스에 이미지를 저장하므로 저장소 쓰기 권한 필요
    4. 프로필 이미지 추가 혹은 게시물에 이미지를 추가할 때 사진 촬영 -> 카메라 권한 필요
    5. Access network state 권한이 왜 필요한지 모르겠음. 주석처리하고 사용하니 확인 바람
    -->


    <!-- <uses-permission android:name="android.permission.GET_ACCOUNTS" /> -->
    <!-- <uses-permission android:name="android.permission.READ_PROFILE" /> -->
    <!-- <uses-permission android:name="android.permission.READ_CONTACTS" /> -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.CAMERA" />

    <!-- <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /> -->
    <application
        android:name=".MyApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">

        <!-- 페이스북 회원가입 로그인 API 구현에 필요한 메타데이터이다. -->

        <meta-data
            android:name="com.facebook.sdk.ApplicationId"
            android:value="@string/facebook_app_id" />

        <!--
        누가버전 이후로는 파일을 앱에서 가져올 때 FileProvider를 통해서
        가져올 수 있다. Uri 혹은 경로에 있는 파일을 그대로 가져올 경우 오류가 발생한다
        -->

        <provider
            android:name="android.support.v4.content.FileProvider"
            android:authorities="nova.typoapp"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths" />
        </provider>

        <!-- 액티비티(화면 구성)에 대한 주석 -->


        <!--
        런처 액티비티


        앱을 실행할 때 가장 먼저 실행되며,
        사용자의 로그인 여부를 확인하여 로그인 화면 혹은 메인 화면으로
        화면을 이동시킨다.

        빈 화면 혹은 기본 백그라운드 이미지 만을 띄운다.
        -->
        <activity
            android:name=".LauncherActivity"
            android:theme="@style/AppTheme.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!--
        로그인 액티비티

        사용자가 로그인 혹은 회원가입을 할 수 있다.
        회원이라면 아이디와 패스워드를 입력하여 로그인 할 수 있고,
        회원이 아니라면 회원가입 버튼을 클릭하여 회원가입을 할 수 있다.
        -->
        <activity
            android:name=".LoginActivity"
            android:label="@string/title_activity_login" />

        <!--
        회원가입 액티비티

        회원가입에서는 사용자의 이메일, 비밀번호, 별명, 이름 등을 받아
        회원가입 처리를 한다.

        이 때 비밀번호는 클라이언트 단에서 암호화 처리 후 서버로 보내게 된다.
        사실 이메일도 개인정보이기 때문에, 어찌보면 암호화처리가 필요한 것 같다.
        -->
        <activity
            android:name=".JoinActivity"
            android:label="@string/title_activity_join" />

        <!--
        페이스북 API를 적용하기 위한 액티비티.

        (내용 보충 필요)

        실제 앱에서 보이지는 않는다.
        -->
        <activity
            android:name="com.facebook.FacebookActivity"
            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
            android:label="@string/app_name" />

        <!--
        메인 액티비티

        뷰페이저로 구성되어, 한 화면에 여러 화면이 Fragment 형태로 담겨져 있다.

        페이지는 총 3페이지로 되어 있다.
        1페이지는 뉴스피드 페이지이다. 사용자가 단어를 등록하고, 댓글과 좋아요로 소통할 수 있다.
        2페이지, 3페이지는 미구현이다. 2페이지는 소모임 컨텐츠, 3페이지는 게임을 구현할 예정이다.(변경 가능)
        -->

        <activity
            android:name=".MainActivity"
            android:label="@string/title_activity_main"
            android:theme="@style/AppTheme.NoActionBar" />

        <!--
        프로필 액티비티

        사용자의 프로필을 보여준다.
        기본적으로 프로필 사진, 이메일, 별명 등을 보여주게 했다.

        추후 사용자 프로필에 정보가 추가된다면, 프로필 액티비티도 업데이트해야 한다.
        -->
        <activity
            android:name=".ProfileActivity"
            android:label="@string/title_activity_profile"
            android:theme="@style/AppTheme.NoActionBar" />

        <!--
        글쓰기 액티비티

        메인 액티비티의 뉴스피드 페이지에서
        글쓰기를 눌렀을 때 띄워지는 글쓰기 화면이다.

                영단어와 뜻, 이미지를 추가하여 글을 쓸 수 있다.
                여기에 더 넣을만한 요소가 없을까?
        -->
        <activity
            android:name=".WriteActivity"
            android:label="@string/title_activity_write"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity android:name=".CommentActivity" />

        <!--
        권한 관리용 액티비티
        권한과 관련된 메소드를 콜한다.
        앱 화면에서는 보이지 않는다.
        -->

        <activity android:name=".permission.PermissionsActivity" />
        <activity
            android:name=".SubCommentActivity"
            android:label="답글"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:name=".EditCommentActivity"
            android:label="수정"
            android:theme="@style/AppTheme.NoActionBar"
            android:windowSoftInputMode="stateAlwaysVisible" />
        <activity
            android:name=".LikeListActivity"
            android:label="좋아요 리스트"
            android:theme="@style/AppTheme.NoActionBar" />
        <activity
            android:label="검색"

            android:name=".SearchActivity"
            android:theme="@style/AppTheme.NoActionBar"/>


        <!-- [START firebase_service] -->
        <service
            android:name=".firebase.MyFireBaseMessagingService">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT"/>
            </intent-filter>
        </service>
        <!-- [END firebase_service] -->
        <!-- [START firebase_iid_service] -->
        <service
            android:name=".firebase.MyFireBaseInstanceIDService">
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT"/>
            </intent-filter>
        </service>
        <!-- [END firebase_iid_service] -->
    </application>

</manifest>